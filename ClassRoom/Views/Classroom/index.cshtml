@{
    ViewData["Title"] = "Homework Tracker";
}

<div class="container mt-3">
    <div class="mb-3">
        <button id="resetButton" class="btn btn-danger">Reset All</button>
        <a asp-controller="Student" asp-action="Manage" class="btn btn-primary ms-2">Edit Students</a>
    </div>
    

    <div class="row" id="studentsContainer">
        <div class="col-12 text-center" id="loadingMessage">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p>Loading student list...</p>
        </div>
    </div>

    <div class="mt-4">
        <div class="d-flex align-items-center justify-content-between mb-2">
            <h4 class="mb-0">Group Chat</h4>

            <div class="d-flex align-items-center">
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="avatarDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Choose Avatar Style
                    </button>
                    <ul class="dropdown-menu" id="avatarStyleList" style="max-height: 300px; overflow-y: auto;"></ul>
                </div>
                <input type="hidden" id="avatarStyleSelect" value="bottts" />

                <input type="text" id="usernameInput" class="form-control me-2 ms-3" style="max-width: 180px;" placeholder="Your name" />
            </div>
        </div>


        <div id="chatBox" class="border p-3" style="height: 250px; overflow-y: auto; background-color: #f8f9fa;"></div>
        <div class="input-group mb-2">
            <textarea id="chatInput" class="form-control" rows="3" placeholder="Type your message..."></textarea>
            <button id="sendChat" class="btn btn-primary ms-2">Send</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            initializeApp();
        });

        const avatarStyles = [
            "adventurer", "adventurer-neutral", "avataaars", "avataaars-neutral", "big-ears", "big-ears-neutral",
            "big-smile", "bottts", "bottts-neutral", "croodles", "croodles-neutral", "fun-emoji", "icons",
            "identicon", "initials", "lorelei", "lorelei-neutral", "micah", "miniavs", "notionists",
            "notionists-neutral", "open-peeps", "personas", "pixel-art", "pixel-art-neutral", "shapes",
            "thumbs"
        ];

        const usernameInput = document.getElementById("usernameInput");
        const avatarList = document.getElementById("avatarStyleList");
        const avatarHiddenInput = document.getElementById("avatarStyleSelect");

        avatarStyles.forEach(style => {
            const seed = "preview";
            const avatarUrl = `https://api.dicebear.com/8.x/${style}/svg?seed=${seed}`;

            const li = document.createElement("li");
            li.innerHTML = `
                <a class="dropdown-item d-flex align-items-center" href="#" data-style="${style}">
                    <img src="${avatarUrl}" alt="${style}" style="width: 30px; height: 30px; border-radius: 5px; margin-right: 10px;">
                    <span>${style}</span>
                </a>
            `;
            avatarList.appendChild(li);
        });

        // Event: select avatar style
        avatarList.addEventListener("click", function (e) {
            if (e.target.closest("a")) {
                e.preventDefault();
                const selected = e.target.closest("a");
                const style = selected.dataset.style;
                document.getElementById("avatarDropdown").innerText = style;
                avatarHiddenInput.value = style;
            }
        });


        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function initializeApp() {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/classroomHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            function refreshStudentUI(students) {
                $("#loadingMessage").remove();
                const container = $("#studentsContainer");
                container.empty();

                if (students.length === 0) {
                    container.html('<div class="col-12 text-center text-muted">No students found</div>');
                    return;
                }

                students.forEach((student, index) => {
                    container.append(`
                        <div class="col-md-3 mb-3">
                            <div class="card">
                                <div class="card-body text-center">
                                    <h5 class="card-title">${student.name}</h5>
                                    <button class="btn ${student.isCompleted ? "btn-success" : "btn-light"} student-button"
                                            data-student-id="${student.id}">
                                        ${student.isCompleted ? "Completed" : "Complete"}
                                    </button>
                                </div>
                            </div>
                        </div>
                    `);
                });


                $(".student-button").off('click').on('click', function () {
                    const studentId = $(this).data("student-id");
                    connection.invoke("UpdateCompletionStatus", studentId, true)
                        .catch(err => console.error("Update error:", err));
                });
            }

            connection.on("ReloadStudents", (students) => {
                refreshStudentUI(students);
            });

            connection.on("UpdateStatus", (studentId, isCompleted) => {
                const button = $(`button[data-student-id="${studentId}"]`);
                button.toggleClass("btn-light", !isCompleted)
                        .toggleClass("btn-success", isCompleted)
                        .text(isCompleted ? "Completed" : "Complete");
            });

            connection.on("ResetAll", () => {
                $(".student-button").removeClass("btn-success").addClass("btn-light").text("Complete");
            });

            connection.on("ReceiveMessage", (sender, message, avatarStyle) => {
                const now = new Date();
                const timeStr = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                const safeMessage = escapeHtml(message).replace(/\n/g, "<br>");

                const avatarUrl = `https://api.dicebear.com/8.x/${avatarStyle}/svg?seed=${encodeURIComponent(sender)}`;

                const chatBox = $("#chatBox");
                chatBox.append(`
                    <div class="d-flex mb-3">
                        <img src="${avatarUrl}" alt="${sender}" class="me-2"
                                style="width: 40px; height: 40px; border-radius: 50%;" />
                        <div class="flex-grow-1 p-2 rounded border bg-white shadow-sm">
                            <div class="d-flex align-items-center mb-1">
                                <strong>${sender}:</strong>
                                <span class="text-muted ms-2" style="font-size: 0.85em;">${timeStr}</span>
                            </div>
                            <div>${safeMessage}</div>
                        </div>
                    </div>
                `);

                chatBox.scrollTop(chatBox[0].scrollHeight);
            });

            $("#sendChat").click(() => {
                const message = $("#chatInput").val();
                let sender = $("#usernameInput").val().trim() || "Anonymous";

                if (message.trim() !== "") {
                    let avatarStyle = $("#avatarStyleSelect").val();

                    // If anonymous → use random style + id
                    if (sender.toLowerCase() === "anonymous") {
                        sender = sender + Math.floor(Math.random() * 100000);
                        avatarStyle = avatarStyles[Math.floor(Math.random() * avatarStyles.length)];
                    }

                    connection.invoke("SendMessage", sender, message, avatarStyle)
                        .catch(err => console.error(err));
                    $("#chatInput").val("");
                }
            });


            connection.start()
                .then(() => connection.invoke("GetCurrentStudents"))
                .catch(err => {
                    console.error("Connection error:", err);
                    $("#loadingMessage p").text("Connection error. Refresh the page.");
                });

            $("#resetButton").click(() => {
                connection.invoke("ResetAllStatuses")
                    .catch(err => console.error(err));
            });
        }
    </script>
}
